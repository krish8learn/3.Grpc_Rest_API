// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Employee.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Employee struct {
	EmployeeId           string   `protobuf:"bytes,1,opt,name=Employee_id,json=EmployeeId,proto3" json:"Employee_id,omitempty"`
	EmployeeName         string   `protobuf:"bytes,2,opt,name=Employee_name,json=EmployeeName,proto3" json:"Employee_name,omitempty"`
	EmployeeMail         string   `protobuf:"bytes,3,opt,name=Employee_mail,json=EmployeeMail,proto3" json:"Employee_mail,omitempty"`
	EmployeeMobile       string   `protobuf:"bytes,4,opt,name=Employee_mobile,json=EmployeeMobile,proto3" json:"Employee_mobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Employee) Reset()         { *m = Employee{} }
func (m *Employee) String() string { return proto.CompactTextString(m) }
func (*Employee) ProtoMessage()    {}
func (*Employee) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0c884b58841063, []int{0}
}

func (m *Employee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Employee.Unmarshal(m, b)
}
func (m *Employee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Employee.Marshal(b, m, deterministic)
}
func (m *Employee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Employee.Merge(m, src)
}
func (m *Employee) XXX_Size() int {
	return xxx_messageInfo_Employee.Size(m)
}
func (m *Employee) XXX_DiscardUnknown() {
	xxx_messageInfo_Employee.DiscardUnknown(m)
}

var xxx_messageInfo_Employee proto.InternalMessageInfo

func (m *Employee) GetEmployeeId() string {
	if m != nil {
		return m.EmployeeId
	}
	return ""
}

func (m *Employee) GetEmployeeName() string {
	if m != nil {
		return m.EmployeeName
	}
	return ""
}

func (m *Employee) GetEmployeeMail() string {
	if m != nil {
		return m.EmployeeMail
	}
	return ""
}

func (m *Employee) GetEmployeeMobile() string {
	if m != nil {
		return m.EmployeeMobile
	}
	return ""
}

type EmpUnaryRequest struct {
	Unaryinput           string   `protobuf:"bytes,1,opt,name=unaryinput,proto3" json:"unaryinput,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmpUnaryRequest) Reset()         { *m = EmpUnaryRequest{} }
func (m *EmpUnaryRequest) String() string { return proto.CompactTextString(m) }
func (*EmpUnaryRequest) ProtoMessage()    {}
func (*EmpUnaryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0c884b58841063, []int{1}
}

func (m *EmpUnaryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmpUnaryRequest.Unmarshal(m, b)
}
func (m *EmpUnaryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmpUnaryRequest.Marshal(b, m, deterministic)
}
func (m *EmpUnaryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmpUnaryRequest.Merge(m, src)
}
func (m *EmpUnaryRequest) XXX_Size() int {
	return xxx_messageInfo_EmpUnaryRequest.Size(m)
}
func (m *EmpUnaryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmpUnaryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmpUnaryRequest proto.InternalMessageInfo

func (m *EmpUnaryRequest) GetUnaryinput() string {
	if m != nil {
		return m.Unaryinput
	}
	return ""
}

type EmpUnaryResponse struct {
	Unaryoutput          *Employee `protobuf:"bytes,1,opt,name=unaryoutput,proto3" json:"unaryoutput,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EmpUnaryResponse) Reset()         { *m = EmpUnaryResponse{} }
func (m *EmpUnaryResponse) String() string { return proto.CompactTextString(m) }
func (*EmpUnaryResponse) ProtoMessage()    {}
func (*EmpUnaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0c884b58841063, []int{2}
}

func (m *EmpUnaryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmpUnaryResponse.Unmarshal(m, b)
}
func (m *EmpUnaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmpUnaryResponse.Marshal(b, m, deterministic)
}
func (m *EmpUnaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmpUnaryResponse.Merge(m, src)
}
func (m *EmpUnaryResponse) XXX_Size() int {
	return xxx_messageInfo_EmpUnaryResponse.Size(m)
}
func (m *EmpUnaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmpUnaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmpUnaryResponse proto.InternalMessageInfo

func (m *EmpUnaryResponse) GetUnaryoutput() *Employee {
	if m != nil {
		return m.Unaryoutput
	}
	return nil
}

type EmpStreamRequest struct {
	Streaminput          string   `protobuf:"bytes,1,opt,name=streaminput,proto3" json:"streaminput,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmpStreamRequest) Reset()         { *m = EmpStreamRequest{} }
func (m *EmpStreamRequest) String() string { return proto.CompactTextString(m) }
func (*EmpStreamRequest) ProtoMessage()    {}
func (*EmpStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0c884b58841063, []int{3}
}

func (m *EmpStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmpStreamRequest.Unmarshal(m, b)
}
func (m *EmpStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmpStreamRequest.Marshal(b, m, deterministic)
}
func (m *EmpStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmpStreamRequest.Merge(m, src)
}
func (m *EmpStreamRequest) XXX_Size() int {
	return xxx_messageInfo_EmpStreamRequest.Size(m)
}
func (m *EmpStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmpStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmpStreamRequest proto.InternalMessageInfo

func (m *EmpStreamRequest) GetStreaminput() string {
	if m != nil {
		return m.Streaminput
	}
	return ""
}

type EmpStreamResponse struct {
	Streamoutput         *Employee `protobuf:"bytes,1,opt,name=streamoutput,proto3" json:"streamoutput,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EmpStreamResponse) Reset()         { *m = EmpStreamResponse{} }
func (m *EmpStreamResponse) String() string { return proto.CompactTextString(m) }
func (*EmpStreamResponse) ProtoMessage()    {}
func (*EmpStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0c884b58841063, []int{4}
}

func (m *EmpStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmpStreamResponse.Unmarshal(m, b)
}
func (m *EmpStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmpStreamResponse.Marshal(b, m, deterministic)
}
func (m *EmpStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmpStreamResponse.Merge(m, src)
}
func (m *EmpStreamResponse) XXX_Size() int {
	return xxx_messageInfo_EmpStreamResponse.Size(m)
}
func (m *EmpStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmpStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmpStreamResponse proto.InternalMessageInfo

func (m *EmpStreamResponse) GetStreamoutput() *Employee {
	if m != nil {
		return m.Streamoutput
	}
	return nil
}

func init() {
	proto.RegisterType((*Employee)(nil), "proto.Employee")
	proto.RegisterType((*EmpUnaryRequest)(nil), "proto.EmpUnaryRequest")
	proto.RegisterType((*EmpUnaryResponse)(nil), "proto.EmpUnaryResponse")
	proto.RegisterType((*EmpStreamRequest)(nil), "proto.EmpStreamRequest")
	proto.RegisterType((*EmpStreamResponse)(nil), "proto.EmpStreamResponse")
}

func init() { proto.RegisterFile("Employee.proto", fileDescriptor_0c0c884b58841063) }

var fileDescriptor_0c0c884b58841063 = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x3f, 0x4f, 0xf3, 0x30,
	0x10, 0xc6, 0xdf, 0xbc, 0xfc, 0xbf, 0x14, 0x0a, 0x1e, 0x20, 0xea, 0x00, 0x95, 0x19, 0x60, 0xaa,
	0x68, 0xcb, 0x8e, 0x40, 0xad, 0x04, 0x43, 0x19, 0x12, 0xb1, 0xb0, 0x20, 0xb7, 0x3d, 0xa9, 0x96,
	0x9c, 0x38, 0x38, 0x0e, 0xa8, 0x9f, 0x83, 0x9d, 0xcf, 0x8a, 0x7a, 0xc1, 0x8d, 0xa3, 0x4a, 0x4c,
	0x97, 0x3c, 0xf7, 0x7b, 0xee, 0xb9, 0x9c, 0x02, 0x47, 0xe3, 0x34, 0x57, 0x7a, 0x89, 0xd8, 0xcb,
	0x8d, 0xb6, 0x9a, 0xed, 0x50, 0xe1, 0xdf, 0x01, 0xec, 0xbb, 0x0e, 0xbb, 0x80, 0xd0, 0x3d, 0xbf,
	0xc9, 0x79, 0x14, 0x74, 0x83, 0xeb, 0x83, 0x18, 0x9c, 0xf4, 0x34, 0x67, 0x97, 0x70, 0xb8, 0x06,
	0x32, 0x91, 0x62, 0xf4, 0x9f, 0x90, 0x96, 0x13, 0x9f, 0x45, 0x8a, 0x0d, 0x28, 0x15, 0x52, 0x45,
	0x5b, 0x4d, 0x68, 0x22, 0xa4, 0x62, 0x57, 0xd0, 0xae, 0x21, 0x3d, 0x95, 0x0a, 0xa3, 0x6d, 0xc2,
	0xd6, 0x7b, 0x4e, 0x48, 0xe5, 0x7d, 0x02, 0x5f, 0x32, 0x61, 0x96, 0x31, 0xbe, 0x97, 0x58, 0x58,
	0x76, 0x0e, 0x50, 0xae, 0xde, 0x65, 0x96, 0x97, 0xd6, 0x6d, 0x59, 0x2b, 0x7c, 0x0c, 0xc7, 0xb5,
	0xa5, 0xc8, 0x75, 0x56, 0x20, 0xeb, 0x43, 0x48, 0x84, 0x2e, 0xad, 0x33, 0x85, 0x83, 0x76, 0x75,
	0x8b, 0x9e, 0x8b, 0x8c, 0x7d, 0x86, 0xdf, 0xd2, 0x98, 0xc4, 0x1a, 0x14, 0xa9, 0x8b, 0xee, 0x42,
	0x58, 0x90, 0xe0, 0x67, 0xfb, 0x12, 0x7f, 0x84, 0x13, 0xcf, 0xf5, 0x9b, 0x3e, 0x84, 0x56, 0xc5,
	0xfc, 0x1d, 0xdf, 0x80, 0x06, 0x5f, 0x01, 0xac, 0x6e, 0x9f, 0xa0, 0xf9, 0x90, 0x33, 0x64, 0x77,
	0x00, 0x09, 0x0a, 0x33, 0x5b, 0x8c, 0x84, 0x15, 0xec, 0xb4, 0xf6, 0xfa, 0xb7, 0xe9, 0x9c, 0x6d,
	0xe8, 0xd5, 0x0a, 0xfc, 0x1f, 0x1b, 0x41, 0x98, 0x2c, 0xf4, 0xe7, 0xbd, 0x52, 0x34, 0xc1, 0x23,
	0x1b, 0xdf, 0xd8, 0x89, 0x36, 0x1b, 0x6e, 0xc6, 0x4d, 0xf0, 0xb0, 0xf7, 0x5a, 0xfd, 0x39, 0xd3,
	0x5d, 0x2a, 0xc3, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf9, 0x58, 0x39, 0x8d, 0x59, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EmpServiceClient is the client API for EmpService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmpServiceClient interface {
	//unary
	SearchData(ctx context.Context, in *EmpUnaryRequest, opts ...grpc.CallOption) (*EmpUnaryResponse, error)
	//server streaming
	ShowAllData(ctx context.Context, in *EmpStreamRequest, opts ...grpc.CallOption) (EmpService_ShowAllDataClient, error)
}

type empServiceClient struct {
	cc *grpc.ClientConn
}

func NewEmpServiceClient(cc *grpc.ClientConn) EmpServiceClient {
	return &empServiceClient{cc}
}

func (c *empServiceClient) SearchData(ctx context.Context, in *EmpUnaryRequest, opts ...grpc.CallOption) (*EmpUnaryResponse, error) {
	out := new(EmpUnaryResponse)
	err := c.cc.Invoke(ctx, "/proto.EmpService/SearchData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *empServiceClient) ShowAllData(ctx context.Context, in *EmpStreamRequest, opts ...grpc.CallOption) (EmpService_ShowAllDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EmpService_serviceDesc.Streams[0], "/proto.EmpService/ShowAllData", opts...)
	if err != nil {
		return nil, err
	}
	x := &empServiceShowAllDataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EmpService_ShowAllDataClient interface {
	Recv() (*EmpStreamResponse, error)
	grpc.ClientStream
}

type empServiceShowAllDataClient struct {
	grpc.ClientStream
}

func (x *empServiceShowAllDataClient) Recv() (*EmpStreamResponse, error) {
	m := new(EmpStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EmpServiceServer is the server API for EmpService service.
type EmpServiceServer interface {
	//unary
	SearchData(context.Context, *EmpUnaryRequest) (*EmpUnaryResponse, error)
	//server streaming
	ShowAllData(*EmpStreamRequest, EmpService_ShowAllDataServer) error
}

// UnimplementedEmpServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEmpServiceServer struct {
}

func (*UnimplementedEmpServiceServer) SearchData(ctx context.Context, req *EmpUnaryRequest) (*EmpUnaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchData not implemented")
}
func (*UnimplementedEmpServiceServer) ShowAllData(req *EmpStreamRequest, srv EmpService_ShowAllDataServer) error {
	return status.Errorf(codes.Unimplemented, "method ShowAllData not implemented")
}

func RegisterEmpServiceServer(s *grpc.Server, srv EmpServiceServer) {
	s.RegisterService(&_EmpService_serviceDesc, srv)
}

func _EmpService_SearchData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmpUnaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmpServiceServer).SearchData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EmpService/SearchData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmpServiceServer).SearchData(ctx, req.(*EmpUnaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmpService_ShowAllData_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EmpStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EmpServiceServer).ShowAllData(m, &empServiceShowAllDataServer{stream})
}

type EmpService_ShowAllDataServer interface {
	Send(*EmpStreamResponse) error
	grpc.ServerStream
}

type empServiceShowAllDataServer struct {
	grpc.ServerStream
}

func (x *empServiceShowAllDataServer) Send(m *EmpStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _EmpService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.EmpService",
	HandlerType: (*EmpServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchData",
			Handler:    _EmpService_SearchData_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ShowAllData",
			Handler:       _EmpService_ShowAllData_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "Employee.proto",
}
